# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies
#
# If you believe there's an error in this file please file an
# issue against the rust-lang/cargo repository. If you're
# editing this file be aware that the upstream Cargo.toml
# will likely look very different (and much more reasonable)

[package]
edition = "2018"
name = "getrandom"
version = "0.2.0"
authors = ["The Rand Project Developers"]
exclude = ["utils/*", ".*", "appveyor.yml"]
description = "A small cross-platform library for retrieving random data from system source"
documentation = "https://docs.rs/getrandom"
categories = ["os", "no-std"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/rust-random/getrandom"
[package.metadata.docs.rs]
features = ["std", "custom"]
[dependencies.cfg-if]
version = "0.1.2"

[dependencies.compiler_builtins]
version = "0.1"
optional = true

[dependencies.core]
version = "1.0"
optional = true
package = "rustc-std-workspace-core"

[features]
custom = []
js = ["stdweb", "wasm-bindgen"]
rdrand = []
rustc-dep-of-std = ["compiler_builtins", "core"]
std = []
test-in-browser = []
[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\", cargo_web))".dependencies.stdweb]
version = "0.4.18"
optional = true
default-features = false
[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\", not(cargo_web)))".dependencies.wasm-bindgen]
version = "0.2.62"
optional = true
default-features = false
[target."cfg(all(target_arch = \"wasm32\", target_os = \"unknown\", not(cargo_web)))".dev-dependencies.wasm-bindgen-test]
version = "0.3.18"
[target."cfg(target_os = \"wasi\")".dependencies.wasi]
version = "0.9"
[target."cfg(unix)".dependencies.libc]
version = "0.2.64"
default-features = false
[badges.appveyor]
repository = "rust-random/getrandom"

[badges.travis-ci]
repository = "rust-random/getrandom"
